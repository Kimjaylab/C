#include <stdio.h> 

int binarySearch(int arr[], int len, int target); // 이진 탐색 함수 선언

int main(void) 
{
    int arr[] = { 1, 2, 3, 7, 9, 12, 21, 27 }; 

    int idx, len, num; 

    len = sizeof(arr) / sizeof(int);  // 배열의 전체 크기를 요소 하나의 크기로 나눠 요소 개수 계산

    printf("탐색할 값 : ");
    scanf("%d", &num);

    idx = binarySearch(arr, len, num); // 이진 탐색 수행

    // 결과 출력
    if (idx == -1)
        printf("탐색 실패\n"); // 찾지 못한 경우
    else
        printf("타겟 저장 인덱스 : %d\n", idx); // 찾은 경우

    return 0; // 프로그램 정상 종료
}

int binarySearch(int arr[], int len, int target) // 이진 탐색 함수 정의
{
    int first = 0;         // 탐색 범위의 시작 인덱스
    int last = len - 1;    // 탐색 범위의 마지막 인덱스
    int mid;               // 중간 인덱스

    while (first <= last) 
    {
        mid = (first + last) / 2; // 중앙 인덱스를 계산

        if (target == arr[mid])   // 중앙 값이 타겟과 일치하면
            return mid;           // 인덱스를 반환하고 종료
        else {
            if (target < arr[mid]) // 타겟이 중앙 값보다 작으면
                last = mid - 1;    // 왼쪽 절반으로 탐색 범위 축소
            else
                first = mid + 1;   // 타겟이 크면 오른쪽 절반 탐색
        }
    }

    return -1; // 탐색 실패 시 -1 반환
}
