#include <stdio.h>   
#include <stdlib.h>  // 동적 메모리 할당 함수(malloc, free) 사용을 위한 헤더 파일


struct something { // 사용자 정의 구조체 something 정의
    int a; // 정수형 멤버 a
    int b; // 정수형 멤버 b
};

int main(void) 
{
    struct something *arr; // 구조체 포인터 변수 arr 선언 (동적 배열용)
    int size, i;           // 사용자로부터 입력받을 크기와 반복문에 사용할 변수 i

    printf("구조체 배열 크기 : "); // 사용자에게 배열 크기 입력 요청
    scanf("%d", &size);           // 크기를 입력받아 size에 저장

    
    arr = (struct something *)malloc(sizeof(struct something) * size); // 입력받은 크기만큼 구조체 배열 동적 할당

    
    for (i = 0; i < size; i++) // 배열의 각 요소에 대해 멤버 값 입력
    {
        printf("arr[%d].a : ", i);       // a 값 입력 요청
        scanf("%d", &arr[i].a);          // 입력값을 해당 구조체 요소의 a에 저장

        printf("arr[%d].b : ", i);       // b 값 입력 요청
        scanf("%d", &arr[i].b);          // 입력값을 해당 구조체 요소의 b에 저장
    }

   
    for (i = 0; i < size; i++)
        printf("arr[%d].a : %d , arr[%d].b : %d \n", i, arr[i].a, i, arr[i].b);  // 입력된 값 출력

    free(arr); // 동적으로 할당한 메모리 해제

    return 0; // 프로그램 정상 종료
}
